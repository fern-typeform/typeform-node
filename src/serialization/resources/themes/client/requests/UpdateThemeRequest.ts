/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import { Typeform } from "@fern-api/typeform";
import * as core from "../../../../../core";

export const UpdateThemeRequest: core.serialization.Schema<
    serializers.UpdateThemeRequest.Raw,
    Typeform.UpdateThemeRequest
> = core.serialization.object({
    background: core.serialization.lazyObject(async () => (await import("../../../..")).BackgroundSettings).optional(),
    colors: core.serialization.lazyObject(async () => (await import("../../../..")).ThemeColors),
    font: core.serialization.lazy(async () => (await import("../../../..")).Font),
    hasTransparentButton: core.serialization.property(
        "has_transparent_button",
        core.serialization.boolean().optional()
    ),
    name: core.serialization.string(),
});

export declare namespace UpdateThemeRequest {
    interface Raw {
        background?: serializers.BackgroundSettings.Raw | null;
        colors: serializers.ThemeColors.Raw;
        font: serializers.Font.Raw;
        has_transparent_button?: boolean | null;
        name: string;
    }
}
